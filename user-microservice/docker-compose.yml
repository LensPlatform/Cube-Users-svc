version: "2.1"
services:
  alertmanager:
    command:
    - --config.file=/etc/alertmanager/config.yml
    - --storage.path=/alertmanager
    container_name: alertmanager
    expose:
    - 9093
    image: prom/alertmanager:v0.20.0
    labels:
      org.label-schema.group: monitoring
    networks:
    - monitor-net
    restart: unless-stopped
    volumes:
    - ./monitoring/alertmanager:/etc/alertmanager
  caddy:
    container_name: caddy
    environment:
    - ADMIN_USER=${ADMIN_USER:-admin}
    - ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    image: stefanprodan/caddy
    labels:
      org.label-schema.group: monitoring
    networks:
    - monitor-net
    ports:
    - 3000:3000
    - 9090:9090
    - 9093:9093
    - 9091:9091
    restart: unless-stopped
    volumes:
    - ./monitoring/caddy:/etc/caddy
  cadvisor:
    container_name: cadvisor
    expose:
    - 8080
    image: gcr.io/google-containers/cadvisor:v0.34.0
    labels:
      org.label-schema.group: monitoring
    networks:
    - monitor-net
    restart: unless-stopped
    volumes:
    - /:/rootfs:ro
    - /var/run:/var/run:rw
    - /sys:/sys:ro
    - /var/lib/docker:/var/lib/docker:ro
  cube_platform-users:
    build:
      context: .
      dockerfile: ./Dockerfile
    depends_on:
    - stats
    - queue-ram1
    - queue-disc1
    networks:
    - monitor-net
    ports:
    - 8186:8086
    - 8187:8087
    - 8188:8088
    - 8189:8089
    restart: always
    volumes:
    - ./:/go/src/github.com/LensPlatform/Lens/services/user-service
  dependencies:
    container_name: dependencies
    depends_on:
    - storage
    entrypoint: crond -f
    environment:
    - STORAGE_TYPE=mysql
    - MYSQL_HOST=mysql
    - MYSQL_USER=zipkin
    - MYSQL_PASS=zipkin
    image: openzipkin/zipkin-dependencies
  grafana:
    container_name: grafana
    environment:
    - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
    - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
    - GF_USERS_ALLOW_SIGN_UP=false
    expose:
    - 3000
    image: grafana/grafana:6.7.1
    labels:
      org.label-schema.group: monitoring
    networks:
    - monitor-net
    restart: unless-stopped
    volumes:
    - grafana_data:/var/lib/grafana
    - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
  nodeexporter:
    command:
    - --path.procfs=/host/proc
    - --path.rootfs=/rootfs
    - --path.sysfs=/host/sys
    - --collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)
    container_name: nodeexporter
    expose:
    - 9100
    image: prom/node-exporter:v0.18.1
    labels:
      org.label-schema.group: monitoring
    networks:
    - monitor-net
    restart: unless-stopped
    volumes:
    - /proc:/host/proc:ro
    - /sys:/host/sys:ro
    - /:/rootfs:ro
  prometheus:
    command:
    - --config.file=/etc/prometheus/prometheus.yml
    - --storage.tsdb.path=/prometheus
    - --web.console.libraries=/etc/prometheus/console_libraries
    - --web.console.templates=/etc/prometheus/consoles
    - --storage.tsdb.retention.time=200h
    - --web.enable-lifecycle
    container_name: prometheus
    expose:
    - 9090
    image: prom/prometheus:v2.17.1
    labels:
      org.label-schema.group: monitoring
    networks:
    - monitor-net
    restart: unless-stopped
    volumes:
    - ./monitoring/prometheus:/etc/prometheus
    - prometheus_data:/prometheus
  pushgateway:
    container_name: pushgateway
    expose:
    - 9091
    image: prom/pushgateway:v1.2.0
    labels:
      org.label-schema.group: monitoring
    networks:
    - monitor-net
    restart: unless-stopped
  queue-disc1:
    environment:
    - RABBITMQ_NODE_TYPE=queue-disc
    - RABBITMQ_NODE_NAME=rabbit@queue-disc1
    - RABBITMQ_CLUSTER_NODE_NAME=rabbit@stats
    - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
    - RABBITMQ_DEFAULT_USER=user
    - RABBITMQ_DEFAULT_PASS=bitnami
    image: bitnami/rabbitmq:3.7
    networks:
    - monitor-net
    volumes:
    - rabbitmqdisc1_data:/bitnami
  queue-ram1:
    environment:
    - RABBITMQ_NODE_TYPE=queue-ram
    - RABBITMQ_NODE_NAME=rabbit@queue-ram1
    - RABBITMQ_CLUSTER_NODE_NAME=rabbit@stats
    - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
    - RABBITMQ_DEFAULT_USER=user
    - RABBITMQ_DEFAULT_PASS=bitnami
    image: bitnami/rabbitmq:3.7
    networks:
    - monitor-net
    volumes:
    - rabbitmqram1_data:/bitnami
  stats:
    environment:
    - RABBITMQ_NODE_TYPE=stats
    - RABBITMQ_NODE_NAME=rabbit@stats
    - RABBITMQ_ERL_COOKIE=s3cr3tc00ki3
    - RABBITMQ_DEFAULT_USER=user
    - RABBITMQ_DEFAULT_PASS=bitnami
    image: bitnami/rabbitmq:3.7
    networks:
    - monitor-net
    ports:
    - 15672:15672
    - 5672:5672
    volumes:
    - rabbitmqstats_data:/bitnami
  storage:
    container_name: mysql
    image: openzipkin/zipkin-mysql
  traefik:
    command:
    - --log.level=DEBUG
    - --api.insecure=true
    - --providers.docker=true
    - --providers.docker.exposedbydefault=false
    - --entrypoints.web.address=:80
    container_name: traefik
    image: traefik:v2.0.0-rc3
    ports:
    - 81:81
    - 8089:8089
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
  zipkin:
    container_name: zipkin
    depends_on:
    - storage
    environment:
    - STORAGE_TYPE=mysql
    - MYSQL_HOST=mysql
    image: openzipkin/zipkin
    ports:
    - 9411:9411
