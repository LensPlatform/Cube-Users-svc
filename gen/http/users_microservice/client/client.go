// Code generated by goa v3.1.1, DO NOT EDIT.
//
// users-microservice client HTTP transport
//
// Command:
// $ goa gen github.com/LensPlatform/cube_users/design

package client

import (
	"context"
	"net/http"

	goahttp "goa.design/goa/v3/http"
	goa "goa.design/goa/v3/pkg"
)

// Client lists the users-microservice service endpoint HTTP clients.
type Client struct {
	// Signin Doer is the HTTP client used to make requests to the signin endpoint.
	SigninDoer goahttp.Doer

	// CreateUser Doer is the HTTP client used to make requests to the CreateUser
	// endpoint.
	CreateUserDoer goahttp.Doer

	// CreateProfile Doer is the HTTP client used to make requests to the
	// CreateProfile endpoint.
	CreateProfileDoer goahttp.Doer

	// CreateUserSubscription Doer is the HTTP client used to make requests to the
	// CreateUserSubscription endpoint.
	CreateUserSubscriptionDoer goahttp.Doer

	// GetUser Doer is the HTTP client used to make requests to the GetUser
	// endpoint.
	GetUserDoer goahttp.Doer

	// RestoreResponseBody controls whether the response bodies are reset after
	// decoding so they can be read again.
	RestoreResponseBody bool

	scheme  string
	host    string
	encoder func(*http.Request) goahttp.Encoder
	decoder func(*http.Response) goahttp.Decoder
}

// NewClient instantiates HTTP clients for all the users-microservice service
// servers.
func NewClient(
	scheme string,
	host string,
	doer goahttp.Doer,
	enc func(*http.Request) goahttp.Encoder,
	dec func(*http.Response) goahttp.Decoder,
	restoreBody bool,
) *Client {
	return &Client{
		SigninDoer:                 doer,
		CreateUserDoer:             doer,
		CreateProfileDoer:          doer,
		CreateUserSubscriptionDoer: doer,
		GetUserDoer:                doer,
		RestoreResponseBody:        restoreBody,
		scheme:                     scheme,
		host:                       host,
		decoder:                    dec,
		encoder:                    enc,
	}
}

// Signin returns an endpoint that makes HTTP requests to the
// users-microservice service signin server.
func (c *Client) Signin() goa.Endpoint {
	var (
		encodeRequest  = EncodeSigninRequest(c.encoder)
		decodeResponse = DecodeSigninResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildSigninRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.SigninDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("users-microservice", "signin", err)
		}
		return decodeResponse(resp)
	}
}

// CreateUser returns an endpoint that makes HTTP requests to the
// users-microservice service CreateUser server.
func (c *Client) CreateUser() goa.Endpoint {
	var (
		encodeRequest  = EncodeCreateUserRequest(c.encoder)
		decodeResponse = DecodeCreateUserResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildCreateUserRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateUserDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("users-microservice", "CreateUser", err)
		}
		return decodeResponse(resp)
	}
}

// CreateProfile returns an endpoint that makes HTTP requests to the
// users-microservice service CreateProfile server.
func (c *Client) CreateProfile() goa.Endpoint {
	var (
		encodeRequest  = EncodeCreateProfileRequest(c.encoder)
		decodeResponse = DecodeCreateProfileResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildCreateProfileRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateProfileDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("users-microservice", "CreateProfile", err)
		}
		return decodeResponse(resp)
	}
}

// CreateUserSubscription returns an endpoint that makes HTTP requests to the
// users-microservice service CreateUserSubscription server.
func (c *Client) CreateUserSubscription() goa.Endpoint {
	var (
		encodeRequest  = EncodeCreateUserSubscriptionRequest(c.encoder)
		decodeResponse = DecodeCreateUserSubscriptionResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildCreateUserSubscriptionRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		err = encodeRequest(req, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.CreateUserSubscriptionDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("users-microservice", "CreateUserSubscription", err)
		}
		return decodeResponse(resp)
	}
}

// GetUser returns an endpoint that makes HTTP requests to the
// users-microservice service GetUser server.
func (c *Client) GetUser() goa.Endpoint {
	var (
		decodeResponse = DecodeGetUserResponse(c.decoder, c.RestoreResponseBody)
	)
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		req, err := c.BuildGetUserRequest(ctx, v)
		if err != nil {
			return nil, err
		}
		resp, err := c.GetUserDoer.Do(req)
		if err != nil {
			return nil, goahttp.ErrRequestError("users-microservice", "GetUser", err)
		}
		return decodeResponse(resp)
	}
}
