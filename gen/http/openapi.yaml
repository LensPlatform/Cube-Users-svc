swagger: "2.0"
info:
  title: Users Microservice For The Cube Platform
  description: HTTP service for the users microservice
  version: ""
host: localhost:7999
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /swagger/swagger.json:
    get:
      tags:
      - swagger
      summary: Download ../../gen/http/openapi.json
      description: JSON document containing the API swagger definition
      operationId: swagger#/swagger/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      - https
  /swagger/swaggerui/*filepath:
    get:
      tags:
      - swagger
      summary: Download swaggerui/dist
      operationId: swagger#/swagger/swaggerui/*filepath
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      - https
  /users-microservice/signin:
    post:
      tags:
      - users-microservice
      summary: signin users-microservice
      description: Creates a valid JWT
      operationId: users-microservice#signin
      parameters:
      - name: Authorization
        in: header
        description: Basic Auth security using Basic scheme (https://tools.ietf.org/html/rfc7617)
        required: true
        type: string
      - name: SigninRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UsersMicroserviceSigninRequestBody'
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UsersMicroserviceSigninResponseBody'
            required:
            - jwt
            - api_key
            - oauth_token
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/UsersMicroserviceSigninUnauthorizedResponseBody'
      schemes:
      - http
      security:
      - basic_header_Authorization: []
  /users-microservice/swagger.json:
    get:
      tags:
      - users-microservice
      summary: Download ../../gen/http/openapi.json
      operationId: users-microservice#/users-microservice/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
      - https
  /users-microservice/user/{user_id}:
    get:
      tags:
      - users-microservice
      summary: GetUser users-microservice
      operationId: users-microservice#GetUser
      parameters:
      - name: user_id
        in: path
        description: User id
        required: true
        type: integer
        format: int64
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UsersMicroserviceGetUserResponseBody'
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/UsersMicroserviceGetUserUnauthorizedResponseBody'
        "504":
          description: Gateway Timeout response.
          schema:
            $ref: '#/definitions/UsersMicroserviceGetUserTimeoutResponseBody'
      schemes:
      - http
  /users-microservice/user/subscription?payload1={subscription}&&payload2={user_id}:
    post:
      tags:
      - users-microservice
      summary: CreateUserSubscription users-microservice
      operationId: users-microservice#CreateUserSubscription
      parameters:
      - name: CreateUserSubscriptionRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UsersMicroserviceCreateUserSubscriptionRequestBody'
          required:
          - subscription
          - user_id
      responses:
        "200":
          description: OK response.
          schema:
            type: integer
            format: int64
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/UsersMicroserviceCreateUserSubscriptionUnauthorizedResponseBody'
        "504":
          description: Gateway Timeout response.
          schema:
            $ref: '#/definitions/UsersMicroserviceCreateUserSubscriptionTimeoutResponseBody'
      schemes:
      - http
  /users-microservice/user/user-account?payload={user}:
    post:
      tags:
      - users-microservice
      summary: CreateUser users-microservice
      operationId: users-microservice#CreateUser
      parameters:
      - name: CreateUserRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UsersMicroserviceCreateUserRequestBody'
          required:
          - user
      responses:
        "200":
          description: OK response.
          schema:
            type: integer
            format: int64
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/UsersMicroserviceCreateUserUnauthorizedResponseBody'
        "504":
          description: Gateway Timeout response.
          schema:
            $ref: '#/definitions/UsersMicroserviceCreateUserTimeoutResponseBody'
      schemes:
      - http
  /users-microservice/user/user-profile?payload1={profile}&payload2={user_id}:
    post:
      tags:
      - users-microservice
      summary: CreateProfile users-microservice
      operationId: users-microservice#CreateProfile
      parameters:
      - name: CreateProfileRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UsersMicroserviceCreateProfileRequestBody'
          required:
          - profile
          - user_id
      responses:
        "200":
          description: OK response.
          schema:
            type: integer
            format: int64
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/UsersMicroserviceCreateProfileUnauthorizedResponseBody'
        "504":
          description: Gateway Timeout response.
          schema:
            $ref: '#/definitions/UsersMicroserviceCreateProfileTimeoutResponseBody'
      schemes:
      - http
definitions:
  ProfileRequestBody:
    title: ProfileRequestBody
    type: object
    properties:
      body:
        example: Id eum voluptatem.
    example:
      body: Deserunt sequi sunt aliquam vel ipsum quae.
  SubscriptionRequestBody:
    title: SubscriptionRequestBody
    type: object
    properties:
      body:
        example: Consectetur sit dolores.
    example:
      body: Nesciunt ut adipisci.
  UserRequestBody:
    title: UserRequestBody
    type: object
    properties:
      body:
        example: Cupiditate enim.
    example:
      body: Enim neque blanditiis.
  UsersMicroserviceCreateProfileRequestBody:
    title: UsersMicroserviceCreateProfileRequestBody
    type: object
    properties:
      profile:
        $ref: '#/definitions/ProfileRequestBody'
      user_id:
        type: integer
        description: user id token which the profile is tied to
        example: 496817533096959351
        format: int64
    example:
      profile:
        body: Et fugit modi error.
      user_id: 3286011864502325541
    required:
    - profile
    - user_id
  UsersMicroserviceCreateProfileTimeoutResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
    properties:
      fault:
        type: boolean
        description: Is the error a server-side fault?
        example: false
      id:
        type: string
        description: ID is a unique identifier for this particular occurrence of the
          problem.
        example: 123abc
      message:
        type: string
        description: Message is a human-readable explanation specific to this occurrence
          of the problem.
        example: parameter 'p' must be an integer
      name:
        type: string
        description: Name is the name of this class of errors.
        example: bad_request
      temporary:
        type: boolean
        description: Is the error temporary?
        example: false
      timeout:
        type: boolean
        description: Is the error a timeout?
        example: false
    description: operation timed out, retry later. (default view)
    example:
      fault: false
      id: 123abc
      message: parameter 'p' must be an integer
      name: bad_request
      temporary: true
      timeout: false
    required:
    - name
    - id
    - message
    - temporary
    - timeout
    - fault
  UsersMicroserviceCreateProfileUnauthorizedResponseBody:
    title: UsersMicroserviceCreateProfileUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Et quam labore ipsa.
  UsersMicroserviceCreateUserRequestBody:
    title: UsersMicroserviceCreateUserRequestBody
    type: object
    properties:
      user:
        $ref: '#/definitions/UserRequestBody'
    example:
      user:
        body: Nemo eum rerum.
    required:
    - user
  UsersMicroserviceCreateUserSubscriptionRequestBody:
    title: UsersMicroserviceCreateUserSubscriptionRequestBody
    type: object
    properties:
      subscription:
        $ref: '#/definitions/SubscriptionRequestBody'
      user_id:
        type: integer
        description: user id to which the subscription is to be created for
        example: 1082167360676398572
        format: int64
    example:
      subscription:
        body: Ut libero vero veniam voluptate eos.
      user_id: 9088204190720472173
    required:
    - subscription
    - user_id
  UsersMicroserviceCreateUserSubscriptionTimeoutResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
    properties:
      fault:
        type: boolean
        description: Is the error a server-side fault?
        example: false
      id:
        type: string
        description: ID is a unique identifier for this particular occurrence of the
          problem.
        example: 123abc
      message:
        type: string
        description: Message is a human-readable explanation specific to this occurrence
          of the problem.
        example: parameter 'p' must be an integer
      name:
        type: string
        description: Name is the name of this class of errors.
        example: bad_request
      temporary:
        type: boolean
        description: Is the error temporary?
        example: false
      timeout:
        type: boolean
        description: Is the error a timeout?
        example: true
    description: operation timed out, retry later. (default view)
    example:
      fault: true
      id: 123abc
      message: parameter 'p' must be an integer
      name: bad_request
      temporary: false
      timeout: false
    required:
    - name
    - id
    - message
    - temporary
    - timeout
    - fault
  UsersMicroserviceCreateUserSubscriptionUnauthorizedResponseBody:
    title: UsersMicroserviceCreateUserSubscriptionUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Qui debitis dolorem ipsa qui laudantium modi.
  UsersMicroserviceCreateUserTimeoutResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
    properties:
      fault:
        type: boolean
        description: Is the error a server-side fault?
        example: false
      id:
        type: string
        description: ID is a unique identifier for this particular occurrence of the
          problem.
        example: 123abc
      message:
        type: string
        description: Message is a human-readable explanation specific to this occurrence
          of the problem.
        example: parameter 'p' must be an integer
      name:
        type: string
        description: Name is the name of this class of errors.
        example: bad_request
      temporary:
        type: boolean
        description: Is the error temporary?
        example: false
      timeout:
        type: boolean
        description: Is the error a timeout?
        example: false
    description: operation timed out, retry later. (default view)
    example:
      fault: true
      id: 123abc
      message: parameter 'p' must be an integer
      name: bad_request
      temporary: false
      timeout: false
    required:
    - name
    - id
    - message
    - temporary
    - timeout
    - fault
  UsersMicroserviceCreateUserUnauthorizedResponseBody:
    title: UsersMicroserviceCreateUserUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Voluptatem laborum ab ab magni consequatur.
  UsersMicroserviceGetUserResponseBody:
    title: UsersMicroserviceGetUserResponseBody
    type: object
    properties:
      body:
        example: Dolore incidunt voluptatem sit id voluptas.
    example:
      body: Molestiae consectetur ut non beatae omnis.
  UsersMicroserviceGetUserTimeoutResponseBody:
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
    properties:
      fault:
        type: boolean
        description: Is the error a server-side fault?
        example: false
      id:
        type: string
        description: ID is a unique identifier for this particular occurrence of the
          problem.
        example: 123abc
      message:
        type: string
        description: Message is a human-readable explanation specific to this occurrence
          of the problem.
        example: parameter 'p' must be an integer
      name:
        type: string
        description: Name is the name of this class of errors.
        example: bad_request
      temporary:
        type: boolean
        description: Is the error temporary?
        example: false
      timeout:
        type: boolean
        description: Is the error a timeout?
        example: true
    description: operation timed out, retry later. (default view)
    example:
      fault: true
      id: 123abc
      message: parameter 'p' must be an integer
      name: bad_request
      temporary: true
      timeout: false
    required:
    - name
    - id
    - message
    - temporary
    - timeout
    - fault
  UsersMicroserviceGetUserUnauthorizedResponseBody:
    title: UsersMicroserviceGetUserUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Quod impedit.
  UsersMicroserviceSigninRequestBody:
    title: UsersMicroserviceSigninRequestBody
    type: object
    properties:
      email:
        type: string
        description: Email used to perform sigin
        example: userame@gmail.com
    description: Credentials used to authenticate to retrieve JWT token
    example:
      email: userame@gmail.com
  UsersMicroserviceSigninResponseBody:
    title: UsersMicroserviceSigninResponseBody
    type: object
    properties:
      api_key:
        type: string
        description: API Key
        example: abcdef12345
      jwt:
        type: string
        description: JWT token
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      oauth_token:
        type: string
        description: OAuth2 token
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
    example:
      api_key: abcdef12345
      jwt: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      oauth_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
    required:
    - jwt
    - api_key
    - oauth_token
  UsersMicroserviceSigninUnauthorizedResponseBody:
    title: UsersMicroserviceSigninUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Dolorum et minima.
securityDefinitions:
  basic_header_Authorization:
    type: basic
    description: |-
      Basic authentication used to authenticate security principal during signin

      **Security Scopes**:
        * `api:read`: Read-only access
externalDocs:
  description: Service Documentation
  url: https://github.com/goadesign/goa/tree/master/example/security/README.md
