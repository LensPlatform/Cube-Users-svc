// Code generated by goa v3.1.1, DO NOT EDIT.
//
// users-microservice gRPC client
//
// Command:
// $ goa gen github.com/LensPlatform/cube_users/design

package client

import (
	"context"

	users_microservicepb "github.com/LensPlatform/cube_users/gen/grpc/users_microservice/pb"
	goagrpc "goa.design/goa/v3/grpc"
	goapb "goa.design/goa/v3/grpc/pb"
	goa "goa.design/goa/v3/pkg"
	"google.golang.org/grpc"
)

// Client lists the service endpoint gRPC clients.
type Client struct {
	grpccli users_microservicepb.UsersMicroserviceClient
	opts    []grpc.CallOption
}

// NewClient instantiates gRPC client for all the users-microservice service
// servers.
func NewClient(cc *grpc.ClientConn, opts ...grpc.CallOption) *Client {
	return &Client{
		grpccli: users_microservicepb.NewUsersMicroserviceClient(cc),
		opts:    opts,
	}
}

// Signin calls the "Signin" function in
// users_microservicepb.UsersMicroserviceClient interface.
func (c *Client) Signin() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildSigninFunc(c.grpccli, c.opts...),
			EncodeSigninRequest,
			DecodeSigninResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// CreateUser calls the "CreateUser" function in
// users_microservicepb.UsersMicroserviceClient interface.
func (c *Client) CreateUser() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildCreateUserFunc(c.grpccli, c.opts...),
			EncodeCreateUserRequest,
			DecodeCreateUserResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// CreateProfile calls the "CreateProfile" function in
// users_microservicepb.UsersMicroserviceClient interface.
func (c *Client) CreateProfile() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildCreateProfileFunc(c.grpccli, c.opts...),
			EncodeCreateProfileRequest,
			DecodeCreateProfileResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// CreateUserSubscription calls the "CreateUserSubscription" function in
// users_microservicepb.UsersMicroserviceClient interface.
func (c *Client) CreateUserSubscription() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildCreateUserSubscriptionFunc(c.grpccli, c.opts...),
			EncodeCreateUserSubscriptionRequest,
			DecodeCreateUserSubscriptionResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}

// GetUser calls the "GetUser" function in
// users_microservicepb.UsersMicroserviceClient interface.
func (c *Client) GetUser() goa.Endpoint {
	return func(ctx context.Context, v interface{}) (interface{}, error) {
		inv := goagrpc.NewInvoker(
			BuildGetUserFunc(c.grpccli, c.opts...),
			EncodeGetUserRequest,
			DecodeGetUserResponse)
		res, err := inv.Invoke(ctx, v)
		if err != nil {
			resp := goagrpc.DecodeError(err)
			switch message := resp.(type) {
			case *goapb.ErrorResponse:
				return nil, goagrpc.NewServiceError(message)
			default:
				return nil, goa.Fault(err.Error())
			}
		}
		return res, nil
	}
}
