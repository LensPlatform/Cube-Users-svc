// Code generated by goa v3.1.1, DO NOT EDIT.
//
// users-microservice gRPC client types
//
// Command:
// $ goa gen github.com/LensPlatform/cube_users/design

package client

import (
	users_microservicepb "github.com/LensPlatform/cube_users/gen/grpc/users_microservice/pb"
	usersmicroservice "github.com/LensPlatform/cube_users/gen/users_microservice"
)

// NewSigninRequest builds the gRPC request type from the payload of the
// "signin" endpoint of the "users-microservice" service.
func NewSigninRequest(payload *usersmicroservice.SigninPayload) *users_microservicepb.SigninRequest {
	message := &users_microservicepb.SigninRequest{}
	if payload.Email != nil {
		message.Email = *payload.Email
	}
	return message
}

// NewSigninResult builds the result type of the "signin" endpoint of the
// "users-microservice" service from the gRPC response type.
func NewSigninResult(message *users_microservicepb.SigninResponse) *usersmicroservice.Creds {
	result := &usersmicroservice.Creds{
		JWT:        message.Jwt,
		APIKey:     message.ApiKey,
		OauthToken: message.OauthToken,
	}
	return result
}

// NewCreateUserRequest builds the gRPC request type from the payload of the
// "CreateUser" endpoint of the "users-microservice" service.
func NewCreateUserRequest(payload *usersmicroservice.CreateUserPayload) *users_microservicepb.CreateUserRequest {
	message := &users_microservicepb.CreateUserRequest{
		User: payload.User,
	}
	return message
}

// NewCreateUserResult builds the result type of the "CreateUser" endpoint of
// the "users-microservice" service from the gRPC response type.
func NewCreateUserResult(message *users_microservicepb.CreateUserResponse) string {
	result := message.Field
	return result
}

// NewCreateProfileRequest builds the gRPC request type from the payload of the
// "CreateProfile" endpoint of the "users-microservice" service.
func NewCreateProfileRequest(payload *usersmicroservice.CreateProfilePayload) *users_microservicepb.CreateProfileRequest {
	message := &users_microservicepb.CreateProfileRequest{
		Profile: payload.Profile,
		UserId:  payload.UserID,
	}
	return message
}

// NewCreateProfileResult builds the result type of the "CreateProfile"
// endpoint of the "users-microservice" service from the gRPC response type.
func NewCreateProfileResult(message *users_microservicepb.CreateProfileResponse) string {
	result := message.Field
	return result
}

// NewCreateUserSubscriptionRequest builds the gRPC request type from the
// payload of the "CreateUserSubscription" endpoint of the "users-microservice"
// service.
func NewCreateUserSubscriptionRequest(payload *usersmicroservice.CreateUserSubscriptionPayload) *users_microservicepb.CreateUserSubscriptionRequest {
	message := &users_microservicepb.CreateUserSubscriptionRequest{
		Subscription: payload.Subscription,
		UserId:       payload.UserID,
	}
	return message
}

// NewCreateUserSubscriptionResult builds the result type of the
// "CreateUserSubscription" endpoint of the "users-microservice" service from
// the gRPC response type.
func NewCreateUserSubscriptionResult(message *users_microservicepb.CreateUserSubscriptionResponse) string {
	result := message.Field
	return result
}

// NewGetUserRequest builds the gRPC request type from the payload of the
// "GetUser" endpoint of the "users-microservice" service.
func NewGetUserRequest(payload *usersmicroservice.GetUserPayload) *users_microservicepb.GetUserRequest {
	message := &users_microservicepb.GetUserRequest{
		UserId: payload.UserID,
	}
	return message
}

// NewGetUserResult builds the result type of the "GetUser" endpoint of the
// "users-microservice" service from the gRPC response type.
func NewGetUserResult(message *users_microservicepb.GetUserResponse) string {
	result := message.Field
	return result
}
